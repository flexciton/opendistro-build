name: Test AD Kibana Tar

on: 
  #schedule:
  #  - cron: '0 10 * * *'
  push:
    branches: 
      - weicongs-amazon-ad-kibana-it

jobs:

  
  Test-AD-Kibana-Plugin:
    runs-on: [ubuntu-16.04]
    strategy:
      matrix:
        java: [14]
    steps:
      - uses: actions/checkout@v1
      - name: Set up AWS Cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Retrieve plugin tags 
        run: |
          echo ::set-env name=p_tag_ad::$(.github/scripts/plugin_tag.sh opendistro-for-elasticsearch/anomaly-detection-kibana-plugin)
          echo ::set-env name=es_version::$(./bin/version-info --es)
          
      - name: Checkout Kibana
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/kibana-oss
          ref: ${{env.es_version}}
          token: ${{ secrets.READ_TOKEN }}
          path: kibana
           
      - uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/anomaly-detection-kibana-plugin
          ref: ${{env.p_tag_ad}}
          path: kibana/plugins/anomaly-detection-kibana-plugin
      
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      
      - name: Get node and yarn versions
        id: node_yarn_versions
        run: |
          echo ::set-env name=kibana_node_version::$(node -p "(require('./kibana/package.json').engines.node).match(/[.0-9]+/)[0]")
          echo ::set-env name=kibana_yarn_version::$(node -p "(require('./kibana/package.json').engines.yarn).match(/[.0-9]+/)[0]")   
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{env.kibana_node_version}}
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install correct yarn version for Kibana
        run: |
          npm uninstall -g yarn
          echo "Installing yarn ${{ env.kibana_yarn_version }}"
          npm i -g yarn@${{ env.kibana_yarn_version }}
      
      - name: Bootstrap the plugin
        run: |
          cd ./kibana/plugins/anomaly-detection-kibana-plugin
          yarn kbn bootstrap
          
      - name: Start ES and Kibana
        run: |
          odfe_version=`./bin/version-info --od`
          echo $odfe_version
          
          mkdir -p odfe-testing
          cd odfe-testing
          aws s3 cp s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistro-elasticsearch/opendistroforelasticsearch-$odfe_version.tar.gz .
          tar -zxf opendistroforelasticsearch-$odfe_version.tar.gz
          cd opendistroforelasticsearch-$odfe_version
          sed -i /install_demo_configuration/d opendistro-tar-install.sh
          ./bin/elasticsearch-plugin remove opendistro_security
          nohup ./opendistro-tar-install.sh &
          sleep 45
          curl -XGET http://127.0.0.1:9200
          
          cd ../..
          
          mkdir -p kibana-testing
          cd kibana-testing
          aws s3 cp s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistroforelasticsearch-kibana/opendistroforelasticsearch-kibana-$odfe_version.tar.gz .
          tar -zxf opendistroforelasticsearch-kibana-$odfe_version.tar.gz
          cd opendistroforelasticsearch-kibana
      
          ./bin/kibana-plugin remove opendistro_security 
          sed -i /^opendistro_security/d ./config/kibana.yml
          sed -i 's/https/http/' ./config/kibana.yml
          nohup ./bin/kibana &
          sleep 120
          curl -v http://127.0.0.1:5601
          
      - name: run IT
        uses: cypress-io/github-action@v1
        with:
          working-directory: kibana/plugins/anomaly-detection-kibana-plugin
          command: yarn cy:run â€”config baseurl=http://localhost:5601
    
